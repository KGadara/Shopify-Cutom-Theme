{% doc %}
  @prompt
    Create a modern product page layout with clean typography, improved spacing, contemporary button styles, and enhanced visual hierarchy. Include modern elements like better product image galleries, streamlined product information sections, and mobile-optimized design patterns., Perfect, now make the buttons  and badegs and the card  with rounded corners

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-product-layout-{{ ai_gen_id }} {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
    font-family: {{ settings.text_font.family }}, {{ settings.text_font.fallback_families }};
  }

  .ai-product-grid-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 60px;
    align-items: start;
  }

  .ai-product-gallery-{{ ai_gen_id }} {
    position: sticky;
    top: 20px;
  }

  .ai-main-image-{{ ai_gen_id }} {
    width: 100%;
    aspect-ratio: 1;
    border-radius: {{ block.settings.image_border_radius }}px;
    overflow: hidden;
    margin-bottom: 16px;
    background-color: #f8f9fa;
  }

  .ai-main-image-{{ ai_gen_id }} img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .ai-main-image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f8f9fa;
    border-radius: {{ block.settings.image_border_radius }}px;
  }

  .ai-main-image-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.3;
  }

  .ai-thumbnail-grid-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 12px;
  }

  .ai-thumbnail-{{ ai_gen_id }} {
    aspect-ratio: 1;
    border-radius: {{ block.settings.thumbnail_border_radius }}px;
    overflow: hidden;
    cursor: pointer;
    border: 2px solid transparent;
    transition: border-color 0.2s ease;
    background-color: #f8f9fa;
  }

  .ai-thumbnail-{{ ai_gen_id }}.active {
    border-color: {{ block.settings.accent_color }};
  }

  .ai-thumbnail-{{ ai_gen_id }} img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-thumbnail-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f8f9fa;
    border-radius: {{ block.settings.thumbnail_border_radius }}px;
  }

  .ai-thumbnail-placeholder-{{ ai_gen_id }} svg {
    width: 50%;
    height: 50%;
    opacity: 0.3;
  }

  .ai-product-info-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    gap: {{ block.settings.info_spacing }}px;
  }

  .ai-product-vendor-{{ ai_gen_id }} {
    font-size: {{ block.settings.vendor_font_size }}px;
    color: {{ block.settings.vendor_color }};
    text-transform: uppercase;
    letter-spacing: 1px;
    font-weight: 500;
    margin: 0;
  }

  .ai-product-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.title_font_size }}px;
    font-weight: {{ block.settings.title_font_weight }};
    color: {{ block.settings.title_color }};
    line-height: 1.2;
    margin: 0;
    font-family: {{ settings.heading_font.family }}, {{ settings.heading_font.fallback_families }};
  }

  .ai-product-price-{{ ai_gen_id }} {
    display: flex;
    align-items: baseline;
    gap: 12px;
    font-size: {{ block.settings.price_font_size }}px;
    font-weight: 600;
  }

  .ai-price-current-{{ ai_gen_id }} {
    color: {{ block.settings.price_color }};
  }

  .ai-price-compare-{{ ai_gen_id }} {
    color: {{ block.settings.compare_price_color }};text-decoration: line-through;
    font-size: 0.9em;
  }

  .ai-price-badge-{{ ai_gen_id }} {
    background-color: {{ block.settings.sale_badge_color }};
    color: white;
    padding: 6px 12px;
    border-radius: 20px;
    font-size: 12px;
    font-weight: 500;
  }

  .ai-product-rating-{{ ai_gen_id }} {
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 14px;
    color: {{ block.settings.rating_color }};
  }

  .ai-rating-stars-{{ ai_gen_id }} {
    display: flex;
    gap: 2px;
  }

  .ai-product-description-{{ ai_gen_id }} {
    font-size: {{ block.settings.description_font_size }}px;
    line-height: 1.6;
    color: {{ block.settings.description_color }};}

  .ai-product-form-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    gap: 20px;
  }

  .ai-variant-selector-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .ai-variant-label-{{ ai_gen_id }} {
    font-size: 14px;
    font-weight: 600;
    color: {{ block.settings.label_color }};margin: 0;
  }

  .ai-variant-options-{{ ai_gen_id }} {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
  }

  .ai-variant-option-{{ ai_gen_id }} {
    padding: 10px 16px;
    border: 2px solid {{ block.settings.variant_border_color }};
    border-radius: 30px;
    background-color: transparent;
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: 14px;
    color: {{ block.settings.variant_text_color }};
  }

  .ai-variant-option-{{ ai_gen_id }}:hover {
    border-color: {{ block.settings.accent_color }};}

  .ai-variant-option-{{ ai_gen_id }}.selected {
    border-color: {{ block.settings.accent_color }};
    background-color: {{ block.settings.accent_color }};color: white;
  }

  .ai-quantity-selector-{{ ai_gen_id }} {
    display: flex;
    align-items: center;
    gap: 12px;
  }

  .ai-quantity-label-{{ ai_gen_id }} {
    font-size: 14px;
    font-weight: 600;
    color: {{ block.settings.label_color }};
  }

  .ai-quantity-input-{{ ai_gen_id }} {
    display: flex;
    align-items: center;
    border: 2px solid {{ block.settings.input_border_color }};
    border-radius: 30px;
    overflow: hidden;
  }

  .ai-quantity-btn-{{ ai_gen_id }} {
    width: 40px;
    height: 40px;
    border: none;
    background-color: {{ block.settings.quantity_btn_color }};
    color: {{ block.settings.quantity_btn_text_color }};
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color 0.2s ease;
  }

  .ai-quantity-btn-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.quantity_btn_hover_color }};
  }

  .ai-quantity-number-{{ ai_gen_id }} {
    width: 60px;
    height: 40px;
    border: none;
    text-align: center;
    font-size: 14px;
    background-color: transparent;
  }

  .ai-add-to-cart-{{ ai_gen_id }} {
    padding: 16px 32px;
    background-color: {{ block.settings.button_color }};
    color: {{ block.settings.button_text_color }};
    border: none;
    border-radius: 50px;
    font-size: {{ block.settings.button_font_size }}px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .ai-add-to-cart-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_color }};
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }

  .ai-add-to-cart-{{ ai_gen_id }}:disabled {
    background-color: #cccccc;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }

  .ai-product-features-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 16px;
    padding: 24px;
    background-color: {{ block.settings.features_bg_color }};
    border-radius: 24px;
  }

  .ai-feature-item-{{ ai_gen_id }} {
    display: flex;
    align-items: center;
    gap: 12px;
    font-size: 14px;
    color: {{ block.settings.features_text_color }};
  }

  .ai-feature-icon-{{ ai_gen_id }} {
    width: 20px;
    height: 20px;
    color: {{ block.settings.accent_color }};
  }

  @media screen and (max-width: 768px) {
    .ai-product-layout-{{ ai_gen_id }} {
      padding: 16px;
    }

    .ai-product-grid-{{ ai_gen_id }} {
      grid-template-columns: 1fr;
      gap: 32px;
    }

    .ai-product-gallery-{{ ai_gen_id }} {
      position: static;
    }

    .ai-thumbnail-grid-{{ ai_gen_id }} {
      grid-template-columns: repeat(5, 1fr);
    }

    .ai-product-title-{{ ai_gen_id }} {
      font-size: {{ block.settings.title_font_size | times: 0.85 }}px;
    }

    .ai-product-features-{{ ai_gen_id }} {
      grid-template-columns: 1fr;
      padding: 20px;
    }

    .ai-variant-options-{{ ai_gen_id }} {
      gap: 6px;
    }

    .ai-variant-option-{{ ai_gen_id }} {
      padding: 8px 12px;
      font-size: 13px;
    }
  }
{% endstyle %}

<modern-product-layout-{{ ai_gen_id }}
  class="ai-product-layout-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  {% if block.settings.product %}
    {% assign product = block.settings.product %}
    <div class="ai-product-grid-{{ ai_gen_id }}">
      <div class="ai-product-gallery-{{ ai_gen_id }}">
        <div class="ai-main-image-{{ ai_gen_id }}">
          {% if product.featured_media %}
            <img
              src="{{ product.featured_media | image_url: width: 800 }}"
              alt="{{ product.featured_media.alt | escape }}"
              width="800"
              height="800"
              loading="lazy"
              data-main-image
            >
          {% else %}
            <div class="ai-main-image-placeholder-{{ ai_gen_id }}">
              {{ 'product-1' | placeholder_svg_tag }}
            </div>
          {% endif %}
        </div>

        {% if product.media.size > 1 %}
          <div class="ai-thumbnail-grid-{{ ai_gen_id }}">
            {% for media in product.media limit: 8 %}
              <div
                class="ai-thumbnail-{{ ai_gen_id }} {% if forloop.first %}active{% endif %}"
                data-thumbnaildata-media-id="{{ media.id }}"
              >
                {% if media.media_type == 'image' %}
                  <img
                    src="{{ media | image_url: width: 200 }}"
                    alt="{{ media.alt | escape }}"
                    width="200"
                    height="200"
                    loading="lazy"
                    data-media-url="{{ media | image_url: width: 800 }}"
                  >
                {% else %}
                  <div class="ai-thumbnail-placeholder-{{ ai_gen_id }}">
                    {{ 'product-1' | placeholder_svg_tag }}
                  </div>
                {% endif %}
              </div>
            {% endfor %}
          </div>
        {% endif %}
      </div>

      <div class="ai-product-info-{{ ai_gen_id }}">
        {% if block.settings.show_vendor and product.vendor != blank %}
          <p class="ai-product-vendor-{{ ai_gen_id }}">{{ product.vendor }}</p>
        {% endif %}

        <h1 class="ai-product-title-{{ ai_gen_id }}">{{ product.title }}</h1><div class="ai-product-price-{{ ai_gen_id }}">
          <span class="ai-price-current-{{ ai_gen_id }}">{{ product.price | money }}</span>
          {% if product.compare_at_price > product.price %}
            <span class="ai-price-compare-{{ ai_gen_id }}">{{ product.compare_at_price | money }}</span>
            {% assign savings = product.compare_at_price | minus: product.price %}
            {% assign savings_percent = savings | times: 100 | divided_by: product.compare_at_price %}
            <span class="ai-price-badge-{{ ai_gen_id }}">Save {{ savings_percent }}%</span>
          {% endif %}
        </div>

        {% if block.settings.show_rating %}
          <div class="ai-product-rating-{{ ai_gen_id }}">
            <div class="ai-rating-stars-{{ ai_gen_id }}">
              {% for i in (1..5) %}
                <svg class="ai-feature-icon-{{ ai_gen_id }}" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                </svg>
              {% endfor %}
            </div>
            <span>({{ block.settings.rating_count }} reviews)</span>
          </div>
        {% endif %}

        {% if product.description != blank %}
          <div class="ai-product-description-{{ ai_gen_id }}">
            {{ product.description | truncate: 200 }}
          </div>
        {% endif %}

        <form class="ai-product-form-{{ ai_gen_id }}" action="/cart/add" method="post" enctype="multipart/form-data">
          {% unless product.has_only_default_variant %}
            {% for option in product.options_with_values %}
              <div class="ai-variant-selector-{{ ai_gen_id }}">
                <label class="ai-variant-label-{{ ai_gen_id }}">{{ option.name }}</label>
                <div class="ai-variant-options-{{ ai_gen_id }}">
                  {% for value in option.values %}
                    <button
                      type="button"
                      class="ai-variant-option-{{ ai_gen_id }} {% if forloop.first %}selected{% endif %}"
                      data-option-value="{{ value | escape }}"
                      data-option-position="{{ option.position }}">
                      {{ value }}
                    </button>
                  {% endfor %}
                </div>
              </div>
            {% endfor %}
          {% endunless %}

          <div class="ai-quantity-selector-{{ ai_gen_id }}">
            <label class="ai-quantity-label-{{ ai_gen_id }}">Quantity</label>
            <div class="ai-quantity-input-{{ ai_gen_id }}">
              <button type="button" class="ai-quantity-btn-{{ ai_gen_id }}" data-quantity-decrease>
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <line x1="5" y1="12" x2="19" y2="12"></line>
                </svg>
              </button>
              <input
                type="number"
                name="quantity"
                value="1"
                min="1"
                class="ai-quantity-number-{{ ai_gen_id }}"
                data-quantity-input
              >
              <button type="button" class="ai-quantity-btn-{{ ai_gen_id }}" data-quantity-increase>
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <line x1="12" y1="5" x2="12" y2="19"></line><line x1="5" y1="12" x2="19" y2="12"></line>
                </svg>
              </button>
            </div>
          </div>

          <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}" data-variant-id>
          <button
            type="submit"
            class="ai-add-to-cart-{{ ai_gen_id }}"
            {% unless product.available %}disabled{% endunless %}
          >
            {% if product.available %}
              Add to Cart
            {% else %}
              Sold Out
            {% endif %}
          </button>
        </form>

        {% if block.settings.show_features %}
          <div class="ai-product-features-{{ ai_gen_id }}">
            <div class="ai-feature-item-{{ ai_gen_id }}">
              <svg class="ai-feature-icon-{{ ai_gen_id }}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path>
                <polyline points="3.27,6.96 12,12.01 20.73,6.96"></polyline>
                <line x1="12" y1="22.08" x2="12" y2="12"></line>
              </svg>
              <span>Free Shipping</span>
            </div>
            <div class="ai-feature-item-{{ ai_gen_id }}">
              <svg class="ai-feature-icon-{{ ai_gen_id }}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M9 12l2 2 4-4"></path>
                <path d="M21 12c0 4.97-4.03 9-9 9s-9-4.03-9-9 4.03-9 9-9 9 4.03 9 9z"></path>
              </svg>
              <span>30-Day Returns</span>
            </div>
            <div class="ai-feature-item-{{ ai_gen_id }}">
              <svg class="ai-feature-icon-{{ ai_gen_id }}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <rect x="1" y="3" width="15" height="13"></rect>
                <polygon points="16,8 20,8 23,11 23,16 16,16 16,8"></polygon><circle cx="5.5" cy="18.5" r="2.5"></circle><circle cx="18.5" cy="18.5" r="2.5"></circle>
              </svg>
              <span>Fast Delivery</span>
            </div>
            <div class="ai-feature-item-{{ ai_gen_id }}">
              <svg class="ai-feature-icon-{{ ai_gen_id }}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M12 1v6m0 6v6m8-8h-6m-6 0H2"></path>
              </svg>
              <span>Secure Payment</span>
            </div>
          </div>
        {% endif %}
      </div>
    </div>
  {% else %}
    <div class="ai-product-grid-{{ ai_gen_id }}">
      <div class="ai-product-gallery-{{ ai_gen_id }}">
        <div class="ai-main-image-{{ ai_gen_id }}"><div class="ai-main-image-placeholder-{{ ai_gen_id }}">
            {{ 'product-1' | placeholder_svg_tag }}
          </div>
        </div>
      </div>
      <div class="ai-product-info-{{ ai_gen_id }}">
        <h1 class="ai-product-title-{{ ai_gen_id }}">Select a product to display</h1>
        <p class="ai-product-description-{{ ai_gen_id }}">Choose a product from the settings to showcase in this modern layout.</p>
      </div>
    </div>
  {% endif %}
</modern-product-layout-{{ ai_gen_id }}>

<script>
(function() {
  class ModernProductLayout{{ ai_gen_id }} extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.initializeGallery();
      this.initializeVariants();
      this.initializeQuantity();
    }

    initializeGallery() {
      const thumbnails = this.querySelectorAll('[data-thumbnail]');
      const mainImage = this.querySelector('[data-main-image]');

      thumbnails.forEach(thumbnail => {
        thumbnail.addEventListener('click', () => {
          thumbnails.forEach(t => t.classList.remove('active'));
          thumbnail.classList.add('active');

          const img = thumbnail.querySelector('img');
          if (img && mainImage) {
            const newSrc = img.dataset.mediaUrl;
            if (newSrc) {
              mainImage.src = newSrc;
            }
          }
        });
      });
    }

    initializeVariants() {
      const variantOptions = this.querySelectorAll('[data-option-value]');
      const variantIdInput = this.querySelector('[data-variant-id]');
      const addToCartBtn = this.querySelector('.ai-add-to-cart-{{ ai_gen_id }}');

      variantOptions.forEach(option => {
        option.addEventListener('click', () => {
          const position = option.dataset.optionPosition;
          const optionsInGroup = this.querySelectorAll(`[data-option-position="${position}"]`);
          
          optionsInGroup.forEach(opt => opt.classList.remove('selected'));
          option.classList.add('selected');

          this.updateVariant();
        });
      });
    }

    updateVariant() {
      const selectedOptions = Array.from(this.querySelectorAll('[data-option-value].selected'))
        .map(option => option.dataset.optionValue);
      
      const variantIdInput = this.querySelector('[data-variant-id]');
      const addToCartBtn = this.querySelector('.ai-add-to-cart-{{ ai_gen_id }}');
      
      if (window.productVariants) {
        const variant = window.productVariants.find(v => 
          selectedOptions.every((option, index) => v.options[index] === option)
        );

        if (variant && variantIdInput) {
          variantIdInput.value = variant.id;
          
          if (variant.available) {
            addToCartBtn.disabled = false;addToCartBtn.textContent = 'Add to Cart';
          } else {
            addToCartBtn.disabled = true;
            addToCartBtn.textContent = 'Sold Out';
          }
        }
      }
    }

    initializeQuantity() {
      const decreaseBtn = this.querySelector('[data-quantity-decrease]');
      const increaseBtn = this.querySelector('[data-quantity-increase]');
      const quantityInput = this.querySelector('[data-quantity-input]');

      if (decreaseBtn && increaseBtn && quantityInput) {
        decreaseBtn.addEventListener('click', () => {
          const currentValue = parseInt(quantityInput.value);
          if (currentValue > 1) {
            quantityInput.value = currentValue - 1;
          }
        });

        increaseBtn.addEventListener('click', () => {
          const currentValue = parseInt(quantityInput.value);
          quantityInput.value = currentValue + 1;
        });
      }
    }
  }

  customElements.define('modern-product-layout-{{ ai_gen_id }}', ModernProductLayout{{ ai_gen_id }});
})();
</script>

{% schema %}
{
  "name": "Modern Product Layout",
  "settings": [
    {
      "type": "header",
      "content": "Product Selection"
    },
    {
      "type": "product",
      "id": "product",
      "label": "Product"
    },
    {
      "type": "header",
      "content": "Display Options"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "label": "Show vendor",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "label": "Show rating",
      "default": true
    },
    {
      "type": "number",
      "id": "rating_count",
      "label": "Rating count",
      "default": 24
    },
    {
      "type": "checkbox",
      "id": "show_features",
      "label": "Show product features",
      "default": true
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "title_font_size",
      "min": 24,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Title font size",
      "default": 32
    },
    {
      "type": "select",
      "id": "title_font_weight",
      "label": "Title font weight",
      "options": [
        {"value": "400", "label": "Normal"},
        {"value": "500", "label": "Medium"},
        {"value": "600", "label": "Semi-bold"},
        {"value": "700", "label": "Bold"}
      ],
      "default": "600"
    },
    {
      "type": "range",
      "id": "price_font_size",
      "min": 18,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Price font size",
      "default": 24
    },
    {
      "type": "range",
      "id": "description_font_size",
      "min": 14,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Description font size",
      "default": 16
    },
    {
      "type": "range",
      "id": "vendor_font_size",
      "min": 12,
      "max": 16,
      "step": 1,
      "unit": "px",
      "label": "Vendor font size",
      "default": 14
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "accent_color",
      "label": "Accent color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "price_color",
      "label": "Price color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "compare_price_color",
      "label": "Compare price color",
      "default": "#999999"
    },
    {
      "type": "color",
      "id": "description_color",
      "label": "Description color",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "vendor_color",
      "label": "Vendor color",
      "default": "#999999"
    },
    {
      "type": "color",
      "id": "rating_color",
      "label": "Rating color",
      "default": "#ffa500"
    },
    {
      "type": "color",
      "id": "sale_badge_color",
      "label": "Sale badge color",
      "default": "#ff4444"
    },
    {
      "type": "header",
      "content": "Button Styling"
    },
    {
      "type": "color",
      "id": "button_color",
      "label": "Button background",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_color",
      "label": "Button hover color",
      "default": "#333333"
    },
    {
      "type": "range",
      "id": "button_font_size",
      "min": 14,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Button font size",
      "default": 16
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 50,
      "step": 2,
      "unit": "px",
      "label": "Button border radius",
      "default": 8
    },
    {
      "type": "header",
      "content": "Form Elements"
    },
    {
      "type": "color",
      "id": "label_color",
      "label": "Label color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "variant_border_color",
      "label": "Variant option border",
      "default": "#cccccc"
    },
    {
      "type": "color",
      "id": "variant_text_color",
      "label": "Variant option text",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "variant_border_radius",
      "min": 0,
      "max": 25,
      "step": 1,
      "unit": "px",
      "label": "Variant option radius",
      "default": 6
    },
    {
      "type": "color",
      "id": "input_border_color",
      "label": "Input border color",
      "default": "#cccccc"
    },
    {
      "type": "range",
      "id": "input_border_radius",
      "min": 0,
      "max": 15,
      "step": 1,
      "unit": "px",
      "label": "Input border radius",
      "default": 6
    },
    {
      "type": "color",
      "id": "quantity_btn_color",
      "label": "Quantity button color",
      "default": "#f5f5f5"
    },
    {
      "type": "color",
      "id": "quantity_btn_text_color",
      "label": "Quantity button text",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "quantity_btn_hover_color",
      "label": "Quantity button hover",
      "default": "#e5e5e5"
    },
    {
      "type": "header",
      "content": "Layout & Spacing"
    },
    {
      "type": "range",
      "id": "info_spacing",
      "min": 16,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Info section spacing",
      "default": 24
    },
    {
      "type": "range",
      "id": "image_border_radius",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Main image radius",
      "default": 12
    },
    {
      "type": "range",
      "id": "thumbnail_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Thumbnail radius",
      "default": 8
    },
    {
      "type": "header",
      "content": "Features Section"
    },
    {
      "type": "color",
      "id": "features_bg_color",
      "label": "Features background",
      "default": "#f8f9fa"
    },
    {
      "type": "color",
      "id": "features_text_color",
      "label": "Features text color",
      "default": "#666666"
    },
    {
      "type": "range",
      "id": "features_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Features border radius",
      "default": 12
    }
  ],
  "presets": [
    {
      "name": "Modern Product Layout"
    }
  ]
}
{% endschema %}